/*
 * DD-WRT Companion is a mobile app that lets you connect to,
 * monitor and manage your DD-WRT routers on the go.
 *
 * Copyright (C) 2014  Armel Soro
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Contact Info: Armel Soro <apps+ddwrt@rm3l.org>
 */

/**
 * Gradle build file*/
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'http://dl.bintray.com/amulyakhare/maven' }
        mavenCentral()
    }

    dependencies {
        //noinspection GradleDynamicVersion
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.2'
    }
}

apply plugin: 'project-report'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'io.fabric'
apply plugin: 'com.github.triplet.play'

//configurations.all {
//    // Check for updates every build
//    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
//}

android {

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    signingConfigs {
        release {
            (keyAlias, storeFile, storePassword, keyPassword) = rootProject.getReleaseSigningConfig()
        }
        debug {
            (keyAlias, storeFile, storePassword, keyPassword) = rootProject.getDebugSigningConfig()
        }
    }

    compileSdkVersion android_sdk
    buildToolsVersion buildTools_version

    playAccountConfigs {
        defaultAccountConfig {
            jsonFile = rootProject.getPlayStoreConfig()
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            //noinspection GroovyAssignabilityCheck
            java.srcDirs = ['src/main/java']
            //noinspection GroovyAssignabilityCheck
            resources.srcDirs = ['src/main/res']
            aidl.srcDirs = ['src/main/res']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }

        main.java.srcDirs += 'src/main/kotlin'

        // Move the tests to tests/java, tests/res, etc...
//        instrumentTest.setRoot('src/androidTests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    defaultConfig {
        //FIXME Change applicationId for lite version
        applicationId "org.rm3l.ddwrt"
        testApplicationId "org.rm3l.ddwrt.tests"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        minSdkVersion 15
        targetSdkVersion android_sdk

        // Chooses the 'square' flavor from libraries that specify a 'shape'
        // dimension.
//    flavorSelection 'shape', 'square'

        vectorDrawables.useSupportLibrary = true

        // Enabling multidex support.
        //        multiDexEnabled true
        // Fetch the version according to git latest tag and "how far are we from last tag"
        (versionCode, versionName) = rootProject.getVersionCodeAndName("default")

        printf("\n-------- VERSION DATA for '$project.name' --------" +
                "\n" +
                "- CODE: " +
                versionCode +
                "\n" +
                "- NAME: " +
                versionName +
                "\n----------------------------\n")

        //        testInstrumentationRunner "android.support.multidex.MultiDexTestRunner"

        playAccountConfig = playAccountConfigs.defaultAccountConfig
    }
    //Those files, from Apache Commons lib cause build errors
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    lintOptions {
        abortOnError false
        disable 'TypographyEllipsis'
    }
    /**
     * Flavors: this is because apps uploaded to Play Store will certainly be banned if
     * they contain link to billing platforms other than Google*/
    productFlavors {
        generic {
            dimension "mode"
            //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
            buildConfigField "boolean", "DONATIONS", "false"
            //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
            buildConfigField "boolean", "DONATIONS_GOOGLE", "false"
            buildConfigField "boolean", "WITH_ADS", "false"
            buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
            buildConfigField "boolean", "WITH_TASKER", "false"
        }
        google {
            dimension "mode"
            //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
            buildConfigField "boolean", "DONATIONS", "false"
            //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
            buildConfigField "boolean", "DONATIONS_GOOGLE", "true"
            buildConfigField "boolean", "WITH_ADS", "false"
            buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
            buildConfigField "boolean", "WITH_TASKER", "true"
        }
        amazon {
            dimension "mode"
            //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
            buildConfigField "boolean", "DONATIONS", "false"
            //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
            buildConfigField "boolean", "DONATIONS_GOOGLE", "false"
            buildConfigField "boolean", "WITH_ADS", "false"
            buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
            buildConfigField "boolean", "WITH_TASKER", "false"
        }
        blackberry {
            dimension "mode"
            //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
            buildConfigField "boolean", "DONATIONS", "false"
            //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
            buildConfigField "boolean", "DONATIONS_GOOGLE", "false"
            buildConfigField "boolean", "WITH_ADS", "false"
            buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
            buildConfigField "boolean", "WITH_TASKER", "false"
        }
        amazonUnderground {
            dimension "mode"
            //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
            buildConfigField "boolean", "DONATIONS", "false"
            //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
            buildConfigField "boolean", "DONATIONS_GOOGLE", "false"
            buildConfigField "boolean", "WITH_ADS", "false"
            buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
            buildConfigField "boolean", "WITH_TASKER", "false"
        }
        samsung {
            dimension "mode"
            //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
            buildConfigField "boolean", "DONATIONS", "false"
            //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
            buildConfigField "boolean", "DONATIONS_GOOGLE", "false"
            buildConfigField "boolean", "WITH_ADS", "false"
            buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
            buildConfigField "boolean", "WITH_TASKER", "false"
        }
        // For FOSS version only (no ads)
        fdroid {
            dimension "mode"
            //Enable 'Donations' menu item
            buildConfigField "boolean", "DONATIONS", "true"
            //F-Droid (pure OSS) will contain links to Google Play IAB, Paypal, Flattr, and Bitcoin
            buildConfigField "boolean", "DONATIONS_GOOGLE", "false"
            buildConfigField "boolean", "WITH_ADS", "false"
            buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
            buildConfigField "boolean", "WITH_TASKER", "false"
        }

        /*
         * =========================================================================================
         * -BEGIN- Free product flavors (but backed by Ads)
         * =========================================================================================
         */
        genericFreeWithAds {
            dimension "mode"
            //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
            buildConfigField "boolean", "DONATIONS", "false"
            //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
            buildConfigField "boolean", "DONATIONS_GOOGLE", "false"

            buildConfigField "boolean", "WITH_ADS", "true"
            buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "true"
            buildConfigField "boolean", "WITH_TASKER", "false"
        }
        googleFreeWithAds {
            dimension "mode"
            //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
            buildConfigField "boolean", "DONATIONS", "false"
            //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
            buildConfigField "boolean", "DONATIONS_GOOGLE", "false"

            buildConfigField "boolean", "WITH_ADS", "true"
            buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
            buildConfigField "boolean", "WITH_TASKER", "false"
        }
        amazonFreeWithAds {
            dimension "mode"
            //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
            buildConfigField "boolean", "DONATIONS", "false"
            //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
            buildConfigField "boolean", "DONATIONS_GOOGLE", "false"

            buildConfigField "boolean", "WITH_ADS", "true"
            buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
            buildConfigField "boolean", "WITH_TASKER", "false"
        }
        blackberryFreeWithAds {
            dimension "mode"
            //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
            buildConfigField "boolean", "DONATIONS", "false"
            //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
            buildConfigField "boolean", "DONATIONS_GOOGLE", "false"

            buildConfigField "boolean", "WITH_ADS", "true"
            buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "true"
            buildConfigField "boolean", "WITH_TASKER", "false"
        }
        samsungFreeWithAds {
            dimension "mode"
            //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
            buildConfigField "boolean", "DONATIONS", "false"
            //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
            buildConfigField "boolean", "DONATIONS_GOOGLE", "false"

            buildConfigField "boolean", "WITH_ADS", "true"
            buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "true"
            buildConfigField "boolean", "WITH_TASKER", "false"
        }
        //        // For FOSS version only (with ads)
        //        fdroidFreeWithAds {
        //            //Disable 'Donations' menu item
        //            buildConfigField "boolean", "DONATIONS", "false"
        //            buildConfigField "boolean", "DONATIONS_GOOGLE", "false"
        //
        //            buildConfigField "boolean", "WITH_ADS", "true"
        //        }
        /*
         * =========================================================================================
         * -END- Full-featured product flavors (but backed by Ads)
         * =========================================================================================
         */
    }
//  dexOptions {
//    incremental true
    //        javaMaxHeapSize "2048M"
//  }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.release
            zipAlignEnabled true
        }
        debug {
            // Disable fabric build ID generation for debug builds
            ext.enableCrashlytics = false
            minifyEnabled true
            proguardFiles 'proguard-rules.pro'
            zipAlignEnabled true

            //Android-Debug-Database - not needed anymore as FB's Stetho superseedes this
//      resValue("string", "PORT_NUMBER", "8080")
        }
    }

    // Specifies the flavor dimensions you want to use. The order in which you
    // list each dimension determines its priority, from highest to lowest,
    // when Gradle merges variant sources and configurations. You must assign
    // each product flavor you configure to one of the flavor dimensions.
    flavorDimensions "mode"
}

//Automate the way version name is built for each flavor
android.productFlavors.each {
    flavor ->
        def (versionCode, versionName) = rootProject.getVersionCodeAndName(flavor.name)
        flavor.versionCode = versionCode
        flavor.versionName = versionName
}

//Other external repositories, to be used besides jcenter
repositories {
//  maven {
    //Statically added in the libs folder, to avoid surprises with this repository suddenly becoming unavailable
//    url "https://repository-achartengine.forge.cloudbees.com/snapshot/"
//  }
    maven {
        url 'http://dl.bintray.com/amulyakhare/maven'
    }
    mavenCentral()
    maven {
        url 'https://maven.fabric.io/public'
    }
    maven { url "https://s3.amazonaws.com/avocarrot-android-builds/dist/" }

    maven { url 'http://dl.bintray.com/igenius-code/maven' }
}

/*
play {
    serviceAccountEmail = '294046724212-r3bef6kl46pb9gk0h1pl5rcjmpfrdpjl@developer.gserviceaccount.com'
    pk12File = file("${homePath}/src/583631bdd16d.p12")
    track = 'beta'
}
 */

//Dependencies
dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//    implementation "androidx.core:core-ktx:$android_ktx_version"
    // Anko Commons
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    // Anko Layouts
//    compile "org.jetbrains.anko:anko-sdk25:$anko_version" // sdk15, sdk19, sdk21, sdk23 are also available
//    compile "org.jetbrains.anko:anko-appcompat-v7:$anko_version"

//    implementation "org.jetbrains.anko:anko-sdk25:$anko_version"
//    implementation "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"
//    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    androidTestImplementation "com.android.support:support-annotations:$support_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"

    implementation project(":libraries:parcelable")
    implementation project(':common')

    implementation fileTree(include: '*.jar', dir: 'libs')

    implementation "com.mikepenz:aboutlibraries:6.1.0"

    implementation('com.mikepenz:materialdrawer:6.0.8@aar') {
        transitive = true
    }

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true
    }

    implementation 'com.google.guava:guava:25.1-android'
    implementation 'commons-net:commons-net:3.6'
    //WARNING: Test that changing JSCh versions do not produce unwanted side-effects, such as an inability to connect
    implementation 'com.jcraft:jsch:0.1.54'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:support-v4:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support:appcompat-v7:$support_version"
//  implementation "com.android.support:palette-v7:$support_version"
    implementation "com.android.support:customtabs:$support_version"
    implementation "com.android.support:preference-v7:$support_version"
//    implementation "com.android.support.constraint:constraint-layout:1.0.2"
//  implementation 'com.cocosw:undobar:1.8.1@aar'
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'com.github.curioustechizen.android-ago:library:1.4.0'
    //    implementation 'com.github.danielemaddaluno.androidupdatechecker:library:1.0.2'
//  implementation 'com.google.android.gms:play-services-ads:11.4.0'
    implementation "com.google.android.gms:play-services-ads-lite:${playServices_version}" //only for distrib. via Play Store

    //Avocarrot - unable to resolve com.avocarrot:android-sdk:4.5.+
    //Example taken from https://github.com/Avocarrot/android-sdk/blob/master/avocarrot-sample/app/build.gradle
//    implementation('com.avocarrot:android-sdk:4.5.+')
    implementation "com.avocarrot.sdk:mediation-sdk-banner:${avocarrot_glispa_version}"
    implementation "com.avocarrot.sdk:mediation-sdk-interstitial:${avocarrot_glispa_version}"
    implementation "com.avocarrot.sdk:mediation-sdk-nativead:${avocarrot_glispa_version}"
    implementation "com.avocarrot.sdk:mediation-sdk-native-assets:${avocarrot_glispa_version}"
    implementation "com.avocarrot.sdk:mediation-sdk-video:${avocarrot_glispa_version}"

    implementation 'fr.nicolaspomepuy:discreetapprate:2.0.4@aar'
    implementation 'com.squareup.picasso:picasso:2.71828'
    //    implementation 'com.github.halysongoncalves:pugnotification:1.8.1'

    implementation 'org.osmdroid:osmdroid-android:6.0.1@aar'

    implementation 'com.github.lzyzsd:circleprogress:1.2.1@aar'

    implementation 'mbanje.kurt:fabbutton:1.2.4@aar'
    implementation 'com.sothree.slidinguppanel:library:3.4.0'

    implementation "com.google.firebase:firebase-appindexing:${playServices_version}"

    /*
     * AirBnB DeepLinkDispatch
     */
    implementation 'com.airbnb:deeplinkdispatch:3.1.1'
    //FIXME To make the build compatible w/ Buck,
    // classes generated by this APT have been manually copied to the source code.
    //Remember to uncomment this when deep links are updated, then generate then copy the classes.
//    kapt 'com.airbnb:deeplinkdispatch-processor:3.1.1'

    implementation 'org.codepond:wizardroid:1.3.1'

    //Otto EventBus
//  implementation 'com.squareup:otto:1.3.8'

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    implementation('org.rm3l:maoni:6.0.0@aar') {
        transitive = true
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'animated-vector-drawable'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-compat'
//    exclude group: 'org.rm3l', module: 'maoni-email'
    }

    implementation('org.rm3l:maoni-doorbell:2.5.0-maoni_6.0.0') {
        transitive = false
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'animated-vector-drawable'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-compat'
    }

    //Send notifications on Slack as well
//  implementation ('org.rm3l:maoni-slack:0.1.4') {
//    transitive = true;
//    exclude group: 'org.rm3l', module: 'maoni-common'
//    exclude group: 'com.android.support', module: 'appcompat-v7'
//    exclude group: 'com.android.support', module: 'design'
//    exclude group: 'com.android.support', module: 'support-v4'
//  }

    //LeakCanary - to detect memory leaks (only in debug flavor)
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    debugImplementation 'com.facebook.stetho:stetho:1.5.0'
    debugImplementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    releaseImplementation "net.igenius:stetho-no-op:1.1"
    testImplementation "net.igenius:stetho-no-op:1.1"

    //    implementation 'io.reactivex:rxandroid:1.2.0'
    //    implementation 'io.reactivex:rxjava:1.1.5'

    implementation 'com.zsoltsafrany:needle:1.0.0'

    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

    implementation 'com.amazonaws:aws-android-sdk-core:2.6.15'
    implementation 'com.amazonaws:aws-android-sdk-s3:2.6.15'

    //TODO Migrate to >= 1.0.0
    implementation('com.stephentuso:welcome:0.7.3') {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'preference-v7'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    // use the latest 1.x version
    implementation('org.wordpress:passcodelock:1.5.1') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }

//  implementation 'com.google.firebase:firebase-messaging:11.4.2'

    //Stetho already does the same
//  debugImplementation 'com.amitshekhar.android:debug-db:1.0.0'

//    implementation 'com.facebook.device.yearclass:yearclass:2.0.0'

    //    implementation('io.hypertrack:smart-scheduler:0.0.2') {
    //        exclude group: 'com.android.support', module: 'appcompat-v7'
    //        exclude group: 'com.google.android.gms', module: 'play-services-gcm'
    //    }

    //Allows to expose the app SharedPreferences from within the app itself
//  implementation 'com.sloydev:preferator:1.0.0'

    //Chuck: in-app HTTP inspector for OkHttp
    debugImplementation('com.readystatesoftware.chuck:library:1.1.0') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'support-v4'
    }
    releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'

    debugImplementation "com.github.nekocode.ResourceInspector:resinspector:0.5.3"
    releaseImplementation "com.github.nekocode.ResourceInspector:resinspector-no-op:0.5.3"
    testImplementation "com.github.nekocode.ResourceInspector:resinspector-no-op:0.5.3"

    implementation 'com.evernote:android-job:1.2.4'

    implementation 'com.jakewharton.byteunits:byteunits:0.9.1'
    implementation 'com.github.florent37:viewtooltip:1.0.8'
}

play {
    // ...
    track = 'beta'
    untrackOld = true // will untrack 'alpha' while upload to 'beta'

    uploadImages = false
    errorOnSizeLimit = true
}

////Add support for Kotlin co-routines
//kotlin {
//    experimental {
//        coroutines "enable"
//    }
//}

// Add to the bottom of the file
apply plugin: 'com.google.gms.google-services'

kapt {
    javacOptions {
        // Generate doc for Deeplinks
        option("-AdeepLinkDoc.output=${buildDir}/doc/deeplinks.txt")
    }
}
