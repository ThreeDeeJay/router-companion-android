/*
 * DD-WRT Companion is a mobile app that lets you connect to,
 * monitor and manage your DD-WRT routers on the go.
 *
 * Copyright (C) 2014  Armel Soro
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Contact Info: Armel Soro <apps+ddwrt@rm3l.org>
 */

/**
 * Gradle build file*/
buildscript {
  repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'http://dl.bintray.com/amulyakhare/maven' }
    mavenCentral()
  }

  dependencies {
    //noinspection GradleDynamicVersion
    classpath 'io.fabric.tools:gradle:1.+'
    classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.7.3'
  }
}

apply plugin: 'com.android.application'
//apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'android-apt'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'io.fabric'
apply plugin: 'com.github.triplet.play'

//configurations.all {
//    // Check for updates every build
//    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
//}

android {

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  signingConfigs {
    release {
      keyAlias 'DDWRTCompanionAndroidKey'
      (storeFile, storePassword, keyPassword) = rootProject.getAndroidSigningConfig()
    }
  }

  compileSdkVersion android_sdk
  buildToolsVersion buildTools_version

  playAccountConfigs {
    defaultAccountConfig {
      jsonFile = rootProject.getPlayStoreConfig()
    }
  }

  sourceSets {
    main {
      manifest.srcFile 'src/main/AndroidManifest.xml'
      //noinspection GroovyAssignabilityCheck
      java.srcDirs = ['src/main/java']
      //noinspection GroovyAssignabilityCheck
      resources.srcDirs = ['src/main/res']
      aidl.srcDirs = ['src/main/res']
      renderscript.srcDirs = ['src/main/java']
      res.srcDirs = ['src/main/res']
      assets.srcDirs = ['src/main/assets']
    }

    main.java.srcDirs += 'src/main/kotlin'

    // Move the tests to tests/java, tests/res, etc...
    instrumentTest.setRoot('src/androidTests')

    // Move the build types to build-types/<type>
    // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
    // This moves them out of them default location under src/<type>/... which would
    // conflict with src/ being used by the main source set.
    // Adding new build types or product flavors should be accompanied
    // by a similar customization.
    debug.setRoot('build-types/debug')
    release.setRoot('build-types/release')
  }
  defaultConfig {
    //FIXME Change applicationId for lite version
    applicationId "org.rm3l.ddwrt"
    testApplicationId "org.rm3l.ddwrt.tests"
    minSdkVersion 15
    targetSdkVersion android_sdk

    vectorDrawables.useSupportLibrary = true

    // Enabling multidex support.
    //        multiDexEnabled true
    // Fetch the version according to git latest tag and "how far are we from last tag"
    (versionCode, versionName) = rootProject.getVersionCodeAndName("default")

    printf("\n-------- VERSION DATA for '$project.name' --------" +
        "\n" +
        "- CODE: " +
        versionCode +
        "\n" +
        "- NAME: " +
        versionName +
        "\n----------------------------\n")

    //        testInstrumentationRunner "android.support.multidex.MultiDexTestRunner"

    playAccountConfig = playAccountConfigs.defaultAccountConfig
  }
  //Those files, from Apache Commons lib cause build errors
  packagingOptions {
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
  }
  lintOptions {
    abortOnError false
    disable 'TypographyEllipsis'
  }
  /**
   * Flavors: this is because apps uploaded to Play Store will certainly be banned if
   * they contain link to billing platforms other than Google*/
  productFlavors {
    generic {
      //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
      buildConfigField "boolean", "DONATIONS", "false"
      //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
      buildConfigField "boolean", "DONATIONS_GOOGLE", "false"
      buildConfigField "boolean", "WITH_ADS", "false"
      buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
      buildConfigField "boolean", "WITH_TASKER", "false"
    }
    google {
      //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
      buildConfigField "boolean", "DONATIONS", "false"
      //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
      buildConfigField "boolean", "DONATIONS_GOOGLE", "true"
      buildConfigField "boolean", "WITH_ADS", "false"
      buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
      buildConfigField "boolean", "WITH_TASKER", "true"
    }
    amazon {
      //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
      buildConfigField "boolean", "DONATIONS", "false"
      //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
      buildConfigField "boolean", "DONATIONS_GOOGLE", "false"
      buildConfigField "boolean", "WITH_ADS", "false"
      buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
      buildConfigField "boolean", "WITH_TASKER", "false"
    }
    blackberry {
      //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
      buildConfigField "boolean", "DONATIONS", "false"
      //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
      buildConfigField "boolean", "DONATIONS_GOOGLE", "false"
      buildConfigField "boolean", "WITH_ADS", "false"
      buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
      buildConfigField "boolean", "WITH_TASKER", "false"
    }
    amazonUnderground {
      //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
      buildConfigField "boolean", "DONATIONS", "false"
      //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
      buildConfigField "boolean", "DONATIONS_GOOGLE", "false"
      buildConfigField "boolean", "WITH_ADS", "false"
      buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
      buildConfigField "boolean", "WITH_TASKER", "false"
    }
    samsung {
      //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
      buildConfigField "boolean", "DONATIONS", "false"
      //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
      buildConfigField "boolean", "DONATIONS_GOOGLE", "false"
      buildConfigField "boolean", "WITH_ADS", "false"
      buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
      buildConfigField "boolean", "WITH_TASKER", "false"
    }
    // For FOSS version only (no ads)
    fdroid {
      //Enable 'Donations' menu item
      buildConfigField "boolean", "DONATIONS", "true"
      //F-Droid (pure OSS) will contain links to Google Play IAB, Paypal, Flattr, and Bitcoin
      buildConfigField "boolean", "DONATIONS_GOOGLE", "false"
      buildConfigField "boolean", "WITH_ADS", "false"
      buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
      buildConfigField "boolean", "WITH_TASKER", "false"
    }

    /*
     * =========================================================================================
     * -BEGIN- Free product flavors (but backed by Ads)
     * =========================================================================================
     */
    genericFreeWithAds {
      //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
      buildConfigField "boolean", "DONATIONS", "false"
      //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
      buildConfigField "boolean", "DONATIONS_GOOGLE", "false"

      buildConfigField "boolean", "WITH_ADS", "true"
      buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "true"
      buildConfigField "boolean", "WITH_TASKER", "false"
    }
    googleFreeWithAds {
      //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
      buildConfigField "boolean", "DONATIONS", "false"
      //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
      buildConfigField "boolean", "DONATIONS_GOOGLE", "false"

      buildConfigField "boolean", "WITH_ADS", "true"
      buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
      buildConfigField "boolean", "WITH_TASKER", "false"
    }
    amazonFreeWithAds {
      //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
      buildConfigField "boolean", "DONATIONS", "false"
      //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
      buildConfigField "boolean", "DONATIONS_GOOGLE", "false"

      buildConfigField "boolean", "WITH_ADS", "true"
      buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "false"
      buildConfigField "boolean", "WITH_TASKER", "false"
    }
    blackberryFreeWithAds {
      //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
      buildConfigField "boolean", "DONATIONS", "false"
      //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
      buildConfigField "boolean", "DONATIONS_GOOGLE", "false"

      buildConfigField "boolean", "WITH_ADS", "true"
      buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "true"
      buildConfigField "boolean", "WITH_TASKER", "false"
    }
    samsungFreeWithAds {
      //Disable 'Donations' menu item for Play Store app (it will certainly be a paid app)
      buildConfigField "boolean", "DONATIONS", "false"
      //PlayStore app will contain an In-App Billing (IAB) link to Google Play only
      buildConfigField "boolean", "DONATIONS_GOOGLE", "false"

      buildConfigField "boolean", "WITH_ADS", "true"
      buildConfigField "boolean", "WITH_INTERSTITIAL_ADS", "true"
      buildConfigField "boolean", "WITH_TASKER", "false"
    }
    //        // For FOSS version only (with ads)
    //        fdroidFreeWithAds {
    //            //Disable 'Donations' menu item
    //            buildConfigField "boolean", "DONATIONS", "false"
    //            buildConfigField "boolean", "DONATIONS_GOOGLE", "false"
    //
    //            buildConfigField "boolean", "WITH_ADS", "true"
    //        }
    /*
     * =========================================================================================
     * -END- Full-featured product flavors (but backed by Ads)
     * =========================================================================================
     */
  }
  dexOptions {
    incremental true
    //        javaMaxHeapSize "2048M"
  }
  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
      zipAlignEnabled true
    }
    debug {
      // Disable fabric build ID generation for debug builds
      ext.enableCrashlytics = false
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      zipAlignEnabled true

      //Android-Debug-Database - not needed anymore as FB's Stetho superseedes this
//      resValue("string", "PORT_NUMBER", "8080")
    }
  }
}

//Automate the way version name is built for each flavor
android.productFlavors.each {
  flavor ->
    def (versionCode, versionName) = rootProject.getVersionCodeAndName(flavor.name)
    flavor.versionCode = versionCode
    flavor.versionName = versionName
}

//Other external repositories, to be used besides jcenter
repositories {
  maven {
    url "https://repository-achartengine.forge.cloudbees.com/snapshot/"
  }
  maven {
    url 'http://dl.bintray.com/amulyakhare/maven'
  }
  mavenCentral()
  maven {
    url 'https://maven.fabric.io/public'
  }
  maven { url "https://s3.amazonaws.com/avocarrot-android-builds/dist" }
}

/*
play {
    serviceAccountEmail = '294046724212-r3bef6kl46pb9gk0h1pl5rcjmpfrdpjl@developer.gserviceaccount.com'
    pk12File = file("${homePath}/src/583631bdd16d.p12")
    track = 'beta'
}
 */

//Dependencies
dependencies {

  compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
  compile "org.jetbrains.anko:anko-sdk15:$anko_version"
  compile "org.jetbrains.anko:anko-common:$anko_version"

  // Unit testing dependencies
  testCompile 'junit:junit:4.12'
  // Set this dependency if you want to use the Hamcrest matcher library
  testCompile 'org.hamcrest:hamcrest-library:1.4-atlassian-1'
  // more stuff, e.g., Mockito
  testCompile 'org.mockito:mockito-core:2.2.26'

  // Required for instrumented tests
  androidTestCompile "com.android.support:support-annotations:$support_version"
  androidTestCompile "com.android.support.test:runner:0.5"

  compile project(':common')

  compile fileTree(include: '*.jar', dir: 'libs')

  compile('com.mikepenz:materialdrawer:5.9.2@aar') {
    transitive = true
  }

  compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
    transitive = true;
  }

//  compile 'net.i2p.android.ext:floatingactionbutton:1.10.1'

  compile 'org.achartengine:achartengine:1.2.0'
  //    compile 'org.sufficientlysecure:donations:2.4'
  compile 'com.google.guava:guava:22.0-android'
//  compile 'commons-io:commons-io:2.5'
  compile 'commons-net:commons-net:3.5'
//  compile 'org.apache.commons:commons-lang3:3.5'
//  compile 'commons-codec:commons-codec:1.10'
  compile 'com.jcraft:jsch:0.1.51'
  //    compile 'ch.acra:acra:4.9.0'
  compile 'com.google.code.gson:gson:2.8.1'
  compile "com.android.support:design:$support_version"
  compile "com.android.support:support-v4:$support_version"
  compile "com.android.support:cardview-v7:$support_version"
  compile "com.android.support:recyclerview-v7:$support_version"
  compile "com.android.support:appcompat-v7:$support_version"
  compile "com.android.support:palette-v7:$support_version"
  compile "com.android.support:customtabs:$support_version"
  compile "com.android.support:preference-v7:$support_version"
  compile "com.android.support.constraint:constraint-layout:1.0.2"
  compile 'com.cocosw:undobar:1.8.1@aar'
  compile 'com.google.zxing:core:3.3.0'
  compile 'com.github.curioustechizen.android-ago:library:1.3.4'
  //    compile 'com.github.danielemaddaluno.androidupdatechecker:library:1.0.2'
  compile 'com.google.android.gms:play-services-ads:11.0.2'
  compile('com.avocarrot:android-sdk:4.0.+')
  compile 'fr.nicolaspomepuy:discreetapprate:2.0.4@aar'
  compile 'com.squareup.picasso:picasso:2.5.2'
  //    compile 'com.github.halysongoncalves:pugnotification:1.8.1'

  compile 'org.osmdroid:osmdroid-android:5.6.5@aar'

  compile 'com.github.lzyzsd:circleprogress:1.2.1@aar'
  //    compile 'com.github.glomadrian:dashed-circular-progress:62912bbdd5'

  compile 'mbanje.kurt:fabbutton:1.2.4@aar'
  compile 'com.sothree.slidinguppanel:library:3.3.1'

  compile 'com.google.firebase:firebase-appindexing:11.0.2'

  /*
   * AirBnB DeepLinkDispatch
   */
  compile 'com.airbnb:deeplinkdispatch:3.1.0'
  kapt 'com.airbnb:deeplinkdispatch-processor:3.1.0'

  compile 'org.codepond:wizardroid:1.3.1'

  //Otto EventBus
//  compile 'com.squareup:otto:1.3.8'

  //Retrofit
  compile 'com.squareup.retrofit2:retrofit:2.3.0'
  compile 'com.squareup.retrofit2:converter-gson:2.3.0'
  compile 'com.squareup.okhttp3:logging-interceptor:3.8.1'

  compile('org.rm3l:maoni:4.0.1@aar') {
    transitive = true
    exclude group: 'com.android.support', module: 'appcompat-v7'
    exclude group: 'com.android.support', module: 'design'
    exclude group: 'com.android.support', module: 'support-v4'
//    exclude group: 'org.rm3l', module: 'maoni-email'
  }

  compile('org.rm3l:maoni-doorbell:2.4.0') {
    transitive = false;
    exclude group: 'com.android.support', module: 'appcompat-v7'
    exclude group: 'com.android.support', module: 'design'
    exclude group: 'com.android.support', module: 'support-v4'
  }

  //Send notifications on Slack as well
//  compile ('org.rm3l:maoni-slack:0.1.4') {
//    transitive = true;
//    exclude group: 'org.rm3l', module: 'maoni-common'
//    exclude group: 'com.android.support', module: 'appcompat-v7'
//    exclude group: 'com.android.support', module: 'design'
//    exclude group: 'com.android.support', module: 'support-v4'
//  }

  //LeakCanary - to detect memory leaks (only in debug flavor)
  debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.1'
  releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
  testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'

  compile 'com.facebook.stetho:stetho:1.5.0'
  compile 'com.facebook.stetho:stetho-okhttp3:1.5.0'

  //    compile 'io.reactivex:rxandroid:1.2.0'
  //    compile 'io.reactivex:rxjava:1.1.5'

  compile 'com.zsoltsafrany:needle:1.0.0'

  compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

  compile 'com.amazonaws:aws-android-sdk-core:2.4.5'
  compile 'com.amazonaws:aws-android-sdk-s3:2.4.5'

  //TODO Migrate to >= 1.0.0
  compile('com.stephentuso:welcome:0.7.3') {
    exclude group: 'com.android.support', module: 'support-v4'
    exclude group: 'com.android.support', module: 'preference-v7'
    exclude group: 'com.android.support', module: 'appcompat-v7'
    exclude group: 'com.android.support', module: 'support-annotations'
  }

  //    compile 'com.esotericsoftware:kryo:4.0.0'

  // use the latest 1.x version
  compile('org.wordpress:passcodelock:1.5.1') {
    exclude group: 'com.android.support', module: 'appcompat-v7'
  }

  compile 'com.google.firebase:firebase-messaging:11.0.2'

  //Stetho already does the same
//  debugCompile 'com.amitshekhar.android:debug-db:1.0.0'

  compile 'com.facebook.device.yearclass:yearclass:2.0.0'

  //    compile('io.hypertrack:smart-scheduler:0.0.2') {
  //        exclude group: 'com.android.support', module: 'appcompat-v7'
  //        exclude group: 'com.google.android.gms', module: 'play-services-gcm'
  //    }

  //Allows to expose the app SharedPreferences from within the app itself
//  compile 'com.sloydev:preferator:1.0.0'

  //Chuck: in-app HTTP inspector for OkHttp
  debugCompile('com.readystatesoftware.chuck:library:1.0.4') {
    exclude group: 'com.android.support', module: 'appcompat-v7'
    exclude group: 'com.android.support', module: 'design'
    exclude group: 'com.android.support', module: 'recyclerview-v7'
    exclude group: 'com.android.support', module: 'support-v4'
  }
  releaseCompile 'com.readystatesoftware.chuck:library-no-op:1.0.4'

  debugCompile "com.github.nekocode.ResourceInspector:resinspector:0.4"
  releaseCompile "com.github.nekocode.ResourceInspector:resinspector-no-op:0.4"
  testCompile "com.github.nekocode.ResourceInspector:resinspector-no-op:0.4"

  //use FB's Stetho network inspector instead
//  compile 'com.github.ihsanbal:LoggingInterceptor:1.0.4'
}


play {
  // ...
  track = 'beta'
  untrackOld = true // will untrack 'alpha' while upload to 'beta'

  uploadImages = false
  errorOnSizeLimit = true
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-AdeepLinkDoc.output=${buildDir}/doc/deeplinks.txt"
}

// Add to the bottom of the file
apply plugin: 'com.google.gms.google-services'
