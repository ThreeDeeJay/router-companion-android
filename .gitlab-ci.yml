stages:
  - build
  - deploy

before_script:
  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SSH_PRIVATE_KEY")

build:
  image: registry.gitlab.com/lemra/router-companion-android/android-sdk:latest
  stage: build

  before_script:
    - sysctl fs.inotify.max_user_watches=999999 || true
    - sysctl fs.inotify.max_queued_events=999999 || true
    - sysctl fs.inotify.max_user_instances=999999 || true
    - sysctl -p

    - chmod +x ./gradlew ./buckw
    - watchman watch-del $CI_PROJECT_DIR || true

# We should not rely upon the cache, as it is done on a best effort basis => no cache if run on different runners
  cache:
    key: "cache-$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG" # per branch caching
    untracked: true
    paths:
      - $GRADLE_USER_HOME/caches/
      - $GRADLE_USER_HOME/wrapper/
      - $GRADLE_USER_HOME/build-cache/
      - buck-out
      - .okbuck

  script:
    - bash ./buckw targets
    - for nonStdAar in com.google.android.gms.play-services-ads-lite-license
        com.google.android.gms.play-services-base-license
        com.google.android.gms.play-services-basement-license
        com.google.android.gms.play-services-tasks-license
        com.google.firebase.firebase-analytics-impl-license
        com.google.firebase.firebase-analytics-license
        com.google.firebase.firebase-appindexing-license
        com.google.firebase.firebase-common-license
        com.google.firebase.firebase-core
        com.google.firebase.firebase-iid-license ;
      do
        nonStdAarFullName="${nonStdAar}-11.8.0.aar";
        mkdir -pv $CI_PROJECT_DIR'/buck-out/bin/.okbuck/cache/__unpack_'${nonStdAarFullName}'#aar_unzip__/res' ;
        bash ./buckw build //.okbuck/cache:${nonStdAarFullName} ;
        mkdir -pv $CI_PROJECT_DIR'/buck-out/bin/.okbuck/cache/__unpack_'${nonStdAarFullName}'#aar_unzip__/res' ;
      done
    - watchman watch-project $CI_PROJECT_DIR || true

    - bash ./buckw build appAmazonDebug tasker-pluginAmazonDebug
    - ./gradlew htmlDependencyReport
  artifacts:
    paths:
    - "buck-out/gen/app/*.apk"
    - "buck-out/gen/tasker-plugin/*.apk"

    - app/build/reports
    - app/build/outputs/
    - app/build/doc

    - common/build/reports
    - common/build/outputs

    - tasker-plugin/build/outputs
    - tasker-plugin/build/reports

production_messaging:
  image: registry.gitlab.com/lemra/router-companion-android/production_deployments:latest
  stage: deploy
  script:
    - ssh -p 1022 ci@rm3l.org "mkdir -p /home/ci/router-companion-android"
    - rsync -ravz -e 'ssh -p 1022' --exclude='.git/' --exclude='.gitlab-ci.yml' --exclude='.gradle' --exclude='build' --delete-excluded ./messaging ci@rm3l.org:/home/ci/router-companion-android
    - ssh -p 1022 ci@rm3l.org "cd /home/ci/router-companion-android/messaging && docker-compose -p router-companion-android-messaging pull && docker-compose -p router-companion-android-messaging up -d --build --remove-orphans"
  only:
    - master
  environment: production

production_tools:
  image: registry.gitlab.com/lemra/router-companion-android/production_deployments:latest
  stage: deploy
  script:
    - ssh -p 1022 ci@rm3l.org "mkdir -p /home/ci/router-companion-android"
    - rsync -ravz -e 'ssh -p 1022' --exclude='.git/' --exclude='.gitlab-ci.yml' --exclude='.gradle' --exclude='build' --delete-excluded ./tools ci@rm3l.org:/home/ci/router-companion-android
    - ssh -p 1022 ci@rm3l.org "cd /home/ci/router-companion-android/tools && docker-compose -p router-companion-android-tools pull && docker-compose -p router-companion-android-tools up -d --build --remove-orphans"
  only:
    - master
  environment: production
