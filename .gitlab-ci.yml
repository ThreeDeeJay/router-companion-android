stages:
  - build
  - deploy

before_script:
  - apt-get update -y

  # For CD pipeline
  # Install ssh-agent if not already installed, it is required by Docker.
  - 'which ssh-agent || apt-get install openssh-client -y'

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SSH_PRIVATE_KEY")

  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  # - mkdir -p ~/.ssh
  # - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  # In order to properly check the server's host key, assuming you created the
  # SSH_SERVER_HOSTKEYS variable previously, uncomment the following two lines
  # instead.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo "$SSH_SERVER_HOSTKEYS" > ~/.ssh/known_hosts'

  - 'which rsync || apt-get install rsync -y'

build:
  image: registry.gitlab.com/lemra/router-companion-android:latest
  stage: build
  before_script:
    - sysctl fs.inotify.max_user_watches=999999 || true
    - sysctl fs.inotify.max_queued_events=999999 || true
    - sysctl fs.inotify.max_user_instances=999999 || true
    - sysctl -p

#    - export GRADLE_USER_HOME=cache/.gradle
    - chmod +x ./gradlew ./buckw
    - watchman watch-del $CI_PROJECT_DIR || true

# This is done on a best effort basis - no cache if run on different runners
  cache:
    key: "cache-$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG" # per branch caching
    untracked: true
    paths:
      - $GRADLE_USER_HOME/caches/
      - $GRADLE_USER_HOME/wrapper/
      - $GRADLE_USER_HOME/build-cache/
      - buck-out
      - .okbuck

  script:
    - bash ./buckw targets
    - for nonStdAar in com.google.android.gms.play-services-ads-lite-license
        com.google.android.gms.play-services-base-license
        com.google.android.gms.play-services-basement-license
        com.google.android.gms.play-services-tasks-license
        com.google.firebase.firebase-analytics-impl-license
        com.google.firebase.firebase-analytics-license
        com.google.firebase.firebase-appindexing-license
        com.google.firebase.firebase-common-license
        com.google.firebase.firebase-core
        com.google.firebase.firebase-iid-license ;
      do
        mkdir -pv $CI_PROJECT_DIR'/buck-out/bin/.okbuck/cache/__unpack_'${nonStdAar}'-11.8.0.aar#aar_unzip__/res' ;
      done
    - watchman watch-project $CI_PROJECT_DIR || true
    - bash ./buckw build appAmazonDebug tasker-pluginAmazonDebug

    # With Gradle
    - ./gradlew htmlDependencyReport
#    - ./gradlew htmlDependencyReport :app:assembleAmazonDebug :tasker-plugin:assembleAmazonDebug
  artifacts:
    paths:
    - "buck-out/gen/app/*.apk"
    - "buck-out/gen/tasker-plugin/*.apk"

    - app/build/reports
    - app/build/outputs/
    - app/build/doc

    - common/build/reports
    - common/build/outputs

    - tasker-plugin/build/outputs
    - tasker-plugin/build/reports

production_messaging:
  image: debian:jessie
  stage: deploy
  script:
    - ssh -p 1022 ci@rm3l.org "mkdir -p /home/ci/router-companion-android"
    - rsync -ravz -e 'ssh -p 1022' --exclude='.git/' --exclude='.gitlab-ci.yml' --exclude='.gradle' --exclude='build' --delete-excluded ./messaging ci@rm3l.org:/home/ci/router-companion-android
    - ssh -p 1022 ci@rm3l.org "cd /home/ci/router-companion-android/messaging && docker-compose -p router-companion-android-messaging pull && docker-compose -p router-companion-android-messaging up -d --build --remove-orphans"
  only:
    - master
  environment: production

production_tools:
  image: debian:jessie
  stage: deploy
  script:
    - ssh -p 1022 ci@rm3l.org "mkdir -p /home/ci/router-companion-android"
    - rsync -ravz -e 'ssh -p 1022' --exclude='.git/' --exclude='.gitlab-ci.yml' --exclude='.gradle' --exclude='build' --delete-excluded ./tools ci@rm3l.org:/home/ci/router-companion-android
    - ssh -p 1022 ci@rm3l.org "cd /home/ci/router-companion-android/tools && docker-compose -p router-companion-android-tools pull && docker-compose -p router-companion-android-tools up -d --build --remove-orphans"
  only:
    - master
  environment: production
